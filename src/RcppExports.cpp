// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// DrawsFromSpread
DataFrame DrawsFromSpread(NumericVector timestamp, NumericVector price, IntegerVector draw_type, List params);
RcppExport SEXP _obadiah_DrawsFromSpread(SEXP timestampSEXP, SEXP priceSEXP, SEXP draw_typeSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type timestamp(timestampSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type price(priceSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type draw_type(draw_typeSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(DrawsFromSpread(timestamp, price, draw_type, params));
    return rcpp_result_gen;
END_RCPP
}
// spread_from_depth
DataFrame spread_from_depth(DatetimeVector timestamp, NumericVector price, NumericVector volume, CharacterVector side);
RcppExport SEXP _obadiah_spread_from_depth(SEXP timestampSEXP, SEXP priceSEXP, SEXP volumeSEXP, SEXP sideSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DatetimeVector >::type timestamp(timestampSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type price(priceSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type volume(volumeSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type side(sideSEXP);
    rcpp_result_gen = Rcpp::wrap(spread_from_depth(timestamp, price, volume, side));
    return rcpp_result_gen;
END_RCPP
}
// draws_from_spread
DataFrame draws_from_spread(NumericVector timestamp, NumericVector price, NumericVector gamma_0, NumericVector theta);
RcppExport SEXP _obadiah_draws_from_spread(SEXP timestampSEXP, SEXP priceSEXP, SEXP gamma_0SEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type timestamp(timestampSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type price(priceSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gamma_0(gamma_0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(draws_from_spread(timestamp, price, gamma_0, theta));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP run_testthat_tests();

static const R_CallMethodDef CallEntries[] = {
    {"_obadiah_DrawsFromSpread", (DL_FUNC) &_obadiah_DrawsFromSpread, 4},
    {"_obadiah_spread_from_depth", (DL_FUNC) &_obadiah_spread_from_depth, 4},
    {"_obadiah_draws_from_spread", (DL_FUNC) &_obadiah_draws_from_spread, 4},
    {"run_testthat_tests", (DL_FUNC) &run_testthat_tests, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_obadiah(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
